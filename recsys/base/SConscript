Import("env_recsys")

env_recsys.lib_objects.append(env_recsys.Object("rating_list.cpp"))
env_recsys.lib_objects.append(env_recsys.Object("rating_trait.cpp"))
env_recsys.lib_objects.append(env_recsys.Object("rating_adjust.cpp"))
env_recsys.lib_objects.append(env_recsys.Object("basic_convert.cpp"))
env_recsys.lib_objects.append(env_recsys.Object("basic_train.cpp"))
env_recsys.lib_objects.append(env_recsys.Object("basic_predict.cpp"))
env_recsys.lib_objects.append(env_recsys.Object("basic_evaluate.cpp"))
env_recsys.lib_objects.append(env_recsys.Object("similarity_matrix.cpp"))

build_env = env_recsys.Clone()
# add gtest support
build_env.Prepend(CPPPATH = "#/external/gtest/include",
                  LIBPATH = "#/external/gtest",
                  LIBS = "gtest",
                  LINKFLAGS = "-pthread")

build_env.Program("rating_list_unittest", ["rating_list_unittest.cpp"])
build_env.Program("rating_matrix_as_items_unittest", ["rating_matrix_as_items_unittest.cpp"])
build_env.Program("rating_matrix_as_users_unittest", ["rating_matrix_as_users_unittest.cpp"])
build_env.Program("rating_trait_unittest", ["rating_trait_unittest.cpp"])
