Import("env_recsys")

build_env = env_recsys.Clone()
# add gflags support
build_env.Prepend(CPPPATH = "#/external/gflags/include",
                  LIBPATH = "#/external/gflags",
                  LIBS = "gflags")

build_env.Program("pop_convert_longan",
                  ["pop_convert_longan.cpp"])
build_env.Program("pop_train_longan", 
                  ["pop_train_longan.cpp", 
                   "pop_train.cpp"])
build_env.Program("pop_evaluate_longan",
                  ["pop_evaluate_longan.cpp", 
                   "pop_evaluate.cpp", 
                   "pop_predict.cpp"])

build_env.Program("random_convert_longan",
                  ["random_convert_longan.cpp"])
build_env.Program("random_train_longan",
                  ["random_train_longan.cpp",
                   "random_train.cpp"])
build_env.Program("random_evaluate_longan",
                  ["random_evaluate_longan.cpp",
                   "random_evaluate.cpp",
                   "random_predict.cpp"])
