Import("env_recsys")

build_env = env_recsys.Clone()
# add gtest support
build_env.Prepend(CPPPATH = "#/external/gtest/include",
                  LIBPATH = "#/external/gtest",
                  LIBS = "gtest",
                  LINKFLAGS = "-pthread")
# add gflags support
build_env.Prepend(CPPPATH = "#/external/gflags/include",
                  LIBPATH = "#/external/gflags",
                  LIBS = "gflags")

build_env.Program("item_based_model_unittest",
                  ["item_based_model_unittest.cpp", 
                   "item_based_model.cpp",
                   "item_based_util.cpp"])
build_env.Program("item_based_model_computation_unittest",
                  ["item_based_model_computation_unittest.cpp", 
                   "item_based_model.cpp",
                   "item_based_model_computation.cpp",
                   "item_based_util.cpp"])

build_env.Program("item_based_convert_longan",
                  ["item_based_convert_longan.cpp"])
build_env.Program("item_based_train_longan", 
                  ["item_based_train_longan.cpp", 
                   "item_based_train.cpp", 
                   "item_based_model.cpp",
                   "item_based_model_computation.cpp",
                   "item_based_util.cpp"])
build_env.Program("item_based_evaluate_longan",
                  ["item_based_evaluate_longan.cpp",
                   "item_based_evaluate.cpp",
                   "item_based_predict.cpp",
                   "item_based_model.cpp",
                   "item_based_util.cpp"])

build_env.Program("user_based_model_unittest",
                  ["user_based_model_unittest.cpp",
                   "user_based_model.cpp",
                   "user_based_util.cpp"])
build_env.Program("user_based_model_computation_unittest",
                  ["user_based_model_computation_unittest.cpp",
                   "user_based_model.cpp",
                   "user_based_model_computation.cpp",
                   "user_based_util.cpp"])

build_env.Program("user_based_convert_longan",
                  ["user_based_convert_longan.cpp"])
build_env.Program("user_based_train_longan",
                  ["user_based_train_longan.cpp", 
                   "user_based_train.cpp",
                   "user_based_model.cpp",
                   "user_based_model_computation.cpp",
                   "user_based_util.cpp"])
build_env.Program("user_based_evaluate_longan",
                  ["user_based_evaluate_longan.cpp",
                   "user_based_evaluate.cpp",
                   "user_based_predict.cpp",
                   "user_based_model.cpp",
                   "user_based_util.cpp"])
